var searchIndex = JSON.parse('{\
"goatns":{"doc":"","t":[17,3,17,3,17,3,17,12,12,0,12,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,0,0,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,12,11,11,11,12,12,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,0,11,11,11,12,0,3,5,11,11,5,11,11,11,11,5,11,5,11,11,11,12,11,11,3,3,3,12,12,11,12,12,12,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,12,11,11,12,11,11,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,4,13,13,13,6,13,11,11,11,11,5,5,5,11,5,11,11,11,11,12,12,12,12,12,12,12,12,12,17,3,3,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,11,11,11,11,11,11,12,11,11,5,5,11,11,11,11,5,5,5,5,5,12,12,11,11,5,5,12,11,11,5,11,11,11,11,11,11,11,5,5,12,12,11,11,12,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,4,17,13,4,13,13,17,4,4,4,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,4,11,11,5,11,11,11,11,11,11,11,11,3,12,12,11,11,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,13,13,13,13,13,3,13,17,17,17,3,3,3,13,4,13,13,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,3,12,11,11,5,11,11,5,11,5,5,11,11,11,5,11,0,5,5,5,5,5,5,5,5,5,5,5,5,5,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,5,5,5,11,11,5,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,5,5,5,11,12,12,12,12,11,11,11,12,12,12,12,12,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,12],"n":["HEADER_BYTES","Header","MAX_IN_FLIGHT","Question","REPLY_TIMEOUT_MS","ResourceRecord","UDP_BUFFER_SIZE","ad","ancount","api","arcount","as_answer","authoritative","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cd","class","clone","clone","clone","clone_into","clone_into","clone_into","config","datastore","db","default","enums","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt_fields","from","from","from","from_packets","get_question_qname","id","into","into","into","name","ne","ne","normalized_name","nscount","opcode","pack","packed_bits","packed_struct_display_formatter","packed_struct_display_header","packet_dumper","qclass","qdcount","qname","qr","qtype","rcode","rdata","record_type","recursion_available","recursion_desired","reply","resourcerecord","serializers","servers","tests","to_bytes","to_owned","to_owned","to_owned","to_string","to_string","truncated","try_from","try_from","try_from","try_into","try_into","try_into","ttl","type_id","type_id","type_id","unpack","utils","vzip","vzip","vzip","z","zones","State","api_query","borrow","borrow_mut","build","clone","clone_into","fmt","from","index","into","status","to_owned","try_from","try_into","tx","type_id","vzip","CONFIG_LOCATIONS","ConfigFile","IPAllowList","__private_field","address","api_listener_address","api_port","api_tls_cert","api_tls_key","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capture_packets","check_config","clone","clone","clone_into","clone_into","default","default","deref","deserialize","deserialize","enable_hinfo","eq","eq","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from","get_config","into","into","into","ip_allow_lists","log_level","ne","ne","port","serialize","serialize","setup_logging","shutdown","sqlite_path","tcp_client_timeout","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","zone_file","Command","GetRecord","GetZone","ImportFile","Responder","Shutdown","borrow","borrow_mut","fmt","from","handle_get_command","handle_get_zone","handle_import_file","into","manager","try_from","try_into","type_id","vzip","filename","name","name","rclass","resp","resp","resp","rrtype","zone_name","SQL_VIEW_RECORDS","User","ZoneOwnership","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create","create","create_ownership_table","create_record","create_record_with_conn","create_records_table","create_users_table","create_zone","create_zone_with_conn","create_zones_table","default","delete","delete","delete_for_user","deserialize","deserialize","email","erased_serialize","erased_serialize","export_zone","export_zone_json","fmt","fmt","from","from","get_conn","get_records","get_zone","get_zone_records","get_zone_with_txn","id","id","into","into","load_zone","load_zone_with_txn","owned_zones","serialize","serialize","start_db","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_zone","update_zone_with_conn","userid","username","vzip","vzip","zoneid","A","AAAA","ALL","API","AXFR","Agent","AgentState","Answer","CAA","CNAME","Chaos","CsNet","Datastore","Export","FormatError","HINFO","Hesiod","Import","Internet","InvalidType","InvalidType","LOC","MAILB","MB","MG","MINFO","MR","MX","NAPTR","NS","NULL","NameError","NoError","NotImplemented","OP_CODE_ALL","OpCode","PACKET_TYPE_ALL","PTR","PacketType","Query","Query","RCODE_ALL","Rcode","RecordClass","RecordType","Refused","Reserved","SOA","ServFail","Server","ShuttingDown","Started","Status","Stopped","SystemState","TCPServer","TXT","UDPServer","URI","WKS","all_variants","all_variants","all_variants","all_variants","all_variants","all_variants","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_primitive","from_primitive","from_primitive","from_str","from_str","from_str","from_str_lower","from_str_lower","from_str_lower","into","into","into","into","into","into","into","into","serialize","supported","to_display_str","to_display_str","to_display_str","to_display_str","to_display_str","to_display_str","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_primitive","to_primitive","to_primitive","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","agent","agent","ClientRequest","DumpType","borrow","borrow_mut","dump_bytes","fmt","from","into","to_string","try_from","try_into","type_id","vzip","Reply","additional","answers","as_bytes","as_bytes_udp","authorities","borrow","borrow_mut","check_set_truncated","clone","clone_into","fmt","from","header","into","question","to_owned","try_from","try_into","type_id","vzip","A","AAAA","ALL","AXFR","CAA","CAA_TAG_VALIDATOR","CNAME","DEFAULT_LOC_HORIZ_PRE","DEFAULT_LOC_SIZE","DEFAULT_LOC_VERT_PRE","DNSCharString","DomainName","FileLocRecord","HINFO","InternalResourceRecord","InvalidType","LOC","LOC_REGEX","LocRecord","MAILB","MB","MG","MINFO","MR","MX","NAPTR","NS","NULL","PTR","SOA","TXT","URI","URI_RECORD","WKS","__private_field","__private_field","__private_field","alt","altitude","as_bytes","as_bytes","as_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_long_labels","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","d1","d2","data","default","deref","deref","deref","deserialize","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt_fields","from","from","from","from","from","from","from","from","from","from","from","hexdump","horiz_pre","horiz_pre","into","into","into","into","into","into","into","into","lat_dir","latitude","lon_dir","longitude","m1","m2","name","ne","ne","ne","ne","ne","pack","packed_bits","packed_struct_display_formatter","packed_struct_display_header","s1","s2","serialize","serialize","serialize","size","size","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpack","version","vert_pre","vert_pre","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","address","address","altitude","class","cname","cpu","domain","exchange","expire","flag","flags","horiz_pre","latitude","longitude","minimum","mname","nsdname","order","os","preference","preference","priority","ptrdname","rclass","rclass","rclass","rclass","rclass","rclass","rclass","rclass","rclass","rclass","rclass","rclass","rclass","rclass","rclass","rclass","rclass","rclass","rclass","rclass","refresh","retry","rname","serial","size","tag","target","ttl","ttl","ttl","ttl","ttl","ttl","ttl","ttl","ttl","ttl","ttl","ttl","ttl","ttl","ttl","ttl","ttl","ttl","ttl","ttl","txtdata","value","version","vert_pre","weight","zone","a_to_ip","aaaa_to_ip","LOCALHOST","__private_field","borrow","borrow_mut","check_for_shutdown","deref","from","get_result","into","parse_query","tcp_server","try_from","try_into","type_id","udp_server","vzip","e2e_test","clap_parser","cli_commands","dms_to_u32","export_zone_file","find_tail_match","hexdump","import_zones","loc_size_to_u8","name_as_bytes","reply_builder","reply_nxdomain","seven_dot_three_conversion","vec_find","FileZone","FileZoneRecord","ZoneRecord","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","class","clone","clone","clone","clone_into","clone_into","clone_into","default","default_id","default_record_class","default_record_name","deserialize","deserialize","empty_zones","eq","eq","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","expire","fmt","fmt","fmt","fmt","fmt","from","from","from","id","id","into","into","into","load_zone_from_file","load_zones","load_zones_to_tree","matching_data","minimum","name","name","name","ne","ne","ne","rdata","records","refresh","retry","rname","rname_default","rrtype","serial","serialize","serialize","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","ttl","type_id","type_id","type_id","typerecords","vzip","vzip","vzip","zoneid"],"q":["goatns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","goatns::api","","","","","","","","","","","","","","","","","","goatns::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","goatns::datastore","","","","","","","","","","","","","","","","","","","goatns::datastore::Command","","","","","","","","","goatns::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","goatns::enumsgoatns::enums::AgentState","","goatns::packet_dumper","","","","","","","","","","","","","goatns::reply","","","","","","","","","","","","","","","","","","","","","goatns::resourcerecordgoatns::resourcerecord::InternalResourceRecord","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","goatns::serializers","","goatns::servers","","","","","","","","","","","","","","","","goatns::tests","goatns::utils","","","","","","","","","","","","","goatns::zones","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The size of a DNS request header","The header of a DNS transmission, either a Query or Reply. …","Internal limit of in-flight requests","A DNS Question section, from Ref RFC1035 section 4.1.2 “…","The default “cancel a server response” timeout","The answer, authority, and additional sections all share …","The maximum size of a UDP packet …","","an unsigned 16 bit integer specifying the number of …","Configuration and management API","an unsigned 16 bit integer specifying the number of …","","","","","","","","","","Two octets which specify the class of the data in the …","","","","","","","Configuration handling for the server","The data-storing backend for zone information and …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","hand it the buffer and the things, and get back a Question","Returns a Vec representation of the name (ie, example.com …","The query ID","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A domain name to which this resource record pertains.","","","","an unsigned 16 bit integer specifying the number of name …","","","","Display formatter for console applications","","","The class, (typically IN for “Internet”)","an unsigned 16 bit integer specifying the number of …","The name which is being queried","","The Record type that is being requested, eg A, NS, MX, TXT …","","A variable length string of octets that describes the …","Two octets containing one of the RR type codes. This field …","","","","","","","","turn a question into a vec of bytes to send back to the …","","","","","","","","","","","","","A 32 bit unsigned integer that specifies the time interval …","","","","","","","","","reserved, must be all 0’s","","Internal State handler for the datastore object within the …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Listen address, default is 0.0.0.0","get a string version of the listener address","API / Web UI Port","Certificate path","TLS key path","","","","","","","","","","","","","","","","","","Enable a HINFO record at hinfo.goat","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Loads the configuration from a given file or from some …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","IP Allow lists","Default is “DEBUG”","","","Listen on this port, default is 15353","","","","A list of allowed IPs to send a shutdown record from","The location for the zone sqlite file","How long until we drop client connections","","","","","","","","","","","","","","","","Where the JSON zone file is","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Manages the datastore, waits for signals from the server …","","","","","","Reversed vec of the name","","","","","","","","","","","","","","","","","","","","create a resource record within a zone","create a resource record within a zone","","","define a zone","","","","","","","","","","","","export a zone!","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Query the zones table, name_or_id can be the zoneid or the …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Hand it a filezone and it’ll update the things","","","","","Do the basic setup and checks (if we write any)","","","","","","","","","","","","","","","A host address","IPv6 Records …","255 A request for all records (*)","","252 A request for a transfer of an entire zone","","","","Certification Authority Restriction - …","","CH - Chaos","CS - CSNET class (Obsolete - used only for examples in …","","","","","Hesiod [Dyer 87]","","IN - Internet","","","For when you want to know the physical location of a …","253 A request for mailbox-related records (MB, MG or MR)","","","","","","NAPTR https://www.rfc-editor.org/rfc/rfc2915","Authoritative name server","","Name Error - Meaningful only for responses from an …","","Not Implemented - The name server does not support the …","","A four bit field that specifies kind of query in this …","","","","A standard query (QUERY)","","","Response code, things like NOERROR, FORMATERROR, SERVFAIL …","CLASS fields appear in resource records, most entries …","RRType, eg A, NS, MX, etc","Refused - The name server refuses to perform the specified …","3-15            reserved for future use","","","","","","Server status request (STATUS)","","","","Text strings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dumps the bytes of a given vector to a templated packet","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","This is used to turn into a series of bytes to yeet back …","because sometimes you need to trunc that junk","","","","checks to see if it’s over the max length set in …","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","A single host address","","","","","","","","",""," is a single length octet followed by that number of …","","This represents a LOC record in a zone file","","","","","","","","","","","","","","","","","","","","","","","","","","","Push the DomainName through the name_as_bytes function","Returns the bytes for a packet, ie - the length and then …","","","","","","","","","","","","","","","","","","tests to ensure that no label in the name is longer than …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Display formatter for console applications","","","","","","","","","","","","","","","","","","","","","","This is where we convert from the JSON blob in the file to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Domain - The domain name to which this resource record …","","","","","","","","","The  of the name server that was the original or primary …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A  which specifies the mailbox of the person responsible …","","","Tags MAY contain ASCII characters “a” through “z”, …","","","","","","","","","","","","","","","","","","","","","","","A sequence of octets representing the Property Value. …","Version number of the representation.  This must be zero. …","","","","Convert a u32 to a string representation of an ipv4 address","Convert a u128 to a string representation of an ipv6 …","","","","","this handles a shutdown CHAOS request","","Returns the argument unchanged.","The generic handler for the packets once they’ve been …","Calls <code>U::from(self)</code>.","Parses the rest of the packets once we have stripped the …","main handler for the TCP side of things","","","","this handles a version CHAOS request","","","","","turn a degrees/minutes/seconds format into unsigned 32-bit …","dump a zone to a file","If you have a <code>name</code> and a <code>target</code> and want to see if you can …","dumps the bytes out as if you were using some kind of …","","converts size/precision X * 10**Y(cm) to 0xXY This code is …","","Want a generic empty reply with an ID and an RCODE? Here’…","","does the conversion from “example.com” to “…","","A DNS Zone in a JSON file","A DNS Record from the JSON file","This is used when storing a set of records in the …","","","","","","","","","","","","","","","If you don’t specify a name, it’s the root.","Sets a default of IN because well, what else would you use?","If you don’t specify a name, it’s the root.","","","","","","","","","","","","EXPIRE - A 32 bit time value that specifies the upper …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Load the data from a JSON file on disk","Checks if they’re equal, ignores the zone id and records","MINIMUM - The unsigned 32 bit minimum TTL field that …","MNAME The  of the name server that was the original or …","","","","","","","","REFRESH - A 32 bit time interval before the zone should be …","RETRY - A 32 bit time interval that should elapse before a …","","default RNAME value for FileZone","","SERIAL - The unsigned 32 bit version number of the …","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,0,1,1,1,1,2,3,1,2,3,1,2,1,2,3,1,2,3,0,0,0,1,0,1,3,1,3,1,1,2,3,3,1,1,2,3,3,0,1,1,2,3,2,1,3,3,1,1,1,1,1,1,0,3,1,3,1,3,1,2,2,1,1,0,0,0,0,0,3,1,2,3,1,3,1,1,2,3,1,2,3,2,1,2,3,1,0,1,2,3,1,0,0,0,19,19,0,19,19,19,19,0,19,0,19,19,19,19,19,19,0,0,0,25,23,23,23,23,23,24,23,25,24,23,25,23,0,24,23,24,23,24,23,25,24,23,23,24,23,24,23,24,23,24,23,23,24,23,23,25,0,24,23,25,23,23,24,23,23,24,23,0,24,23,23,24,23,23,24,23,25,24,23,25,24,23,25,24,23,25,23,0,21,21,21,0,21,21,21,21,21,0,0,0,21,0,21,21,21,21,80,81,82,81,81,82,80,81,80,0,0,0,40,42,40,42,40,40,40,42,0,0,0,0,0,0,0,0,40,40,42,42,40,42,40,40,42,0,0,40,42,40,42,0,0,0,0,0,40,42,40,42,0,0,40,40,42,0,40,40,42,40,42,40,42,0,0,42,40,40,42,42,35,35,35,50,35,0,0,54,35,35,36,36,50,55,53,35,36,55,36,35,36,35,35,35,35,35,35,35,35,35,35,53,53,53,0,0,0,35,0,52,54,0,0,0,0,53,52,35,53,55,55,51,52,51,0,50,35,50,35,35,52,52,53,53,54,54,50,51,55,52,53,35,36,54,50,51,55,52,53,35,36,54,50,51,52,53,35,36,54,50,51,52,53,35,36,54,36,50,55,52,53,35,36,54,50,55,52,53,35,36,54,36,50,51,55,52,53,35,35,36,36,54,50,51,55,52,52,53,35,35,35,35,35,36,36,36,54,54,52,53,54,52,53,54,52,53,54,50,51,55,52,53,35,36,54,36,35,52,52,53,53,54,54,50,51,52,53,35,36,54,52,53,54,35,36,50,51,55,52,53,35,36,54,50,51,55,52,53,35,36,54,50,51,55,52,53,35,36,54,50,51,55,52,53,35,36,54,83,84,58,0,58,58,0,58,58,58,58,58,58,58,58,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,57,57,57,57,57,0,57,0,0,0,0,0,0,57,0,57,57,0,0,57,57,57,57,57,57,57,57,57,57,57,57,57,0,57,64,66,67,63,62,60,61,57,64,66,60,62,61,57,67,63,64,66,60,62,61,57,67,63,0,60,62,61,57,60,62,61,57,63,63,61,63,64,66,67,60,60,62,61,57,57,57,63,60,62,61,57,60,61,57,60,62,62,61,57,63,62,64,66,60,60,60,62,61,61,57,67,63,57,62,63,64,66,60,62,61,57,67,63,63,62,63,62,63,63,60,60,62,61,57,63,62,62,62,62,63,63,60,61,57,62,63,60,62,61,57,62,64,66,60,60,62,61,57,57,57,67,63,63,64,66,60,62,61,57,67,63,64,66,60,62,61,57,67,63,62,62,62,63,64,66,60,62,61,57,67,63,85,86,87,88,89,90,91,92,93,94,91,87,87,87,93,93,95,91,90,91,92,96,97,85,86,98,94,89,87,91,95,93,99,100,101,102,103,97,90,104,92,96,105,93,93,93,93,87,94,96,85,86,98,94,89,87,91,95,99,100,101,102,103,97,90,104,92,88,96,105,88,94,87,87,96,93,0,0,0,73,73,73,0,73,73,0,73,0,0,73,73,73,0,73,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,43,34,38,43,34,43,38,43,34,38,43,34,38,0,0,0,38,43,0,38,43,34,38,43,34,38,43,38,38,43,43,34,34,38,43,34,38,43,38,43,34,0,0,0,38,38,38,43,34,38,43,34,43,38,38,38,38,0,43,38,38,43,38,43,34,43,34,38,43,43,34,38,43,34,43,38,43,34,34,38,43,34,43],"f":[0,0,0,0,0,0,0,0,0,0,0,[1,1],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,1],[2,2],[3,3],[[]],[[]],[[]],0,0,0,[[],1],0,[[1,1],4],[[3,3],4],[[],4],[[],4],[[1,5],6],[[1,5],6],[[2,5],6],[[3,5],6],[[3,5],6],[[1,5],[[8,[7]]]],[[]],[[]],[[]],[[],9],[[],[[8,[[11,[10]],12]]]],0,[[]],[[]],[[]],0,[[1,1],4],[[3,3],4],[3,[[8,[12,12]]]],0,0,[1,13],[[],14],[1,[[15,[1]]]],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[3,[[11,[10]]]],[[]],[[]],[[]],[[],12],[[],12],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[],17],[[],17],[[],17],[[],[[8,[1,18]]]],0,[[]],[[]],[[]],0,0,0,[[[20,[19]]],9],[[]],[[]],[[[22,[21]]],9],[19,19],[[]],[[19,5],6],[[]],[[[20,[19]]],9],[[]],[[[20,[19]]],9],[[]],[[],8],[[],8],0,[[],17],[[]],0,0,0,0,0,[23,12],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[23,[[8,[[11,[12]]]]]],[24,24],[23,23],[[]],[[]],[[],24],[[],23],[25,11],[[],[[8,[24]]]],[[],[[8,[23]]]],0,[[24,24],4],[[23,23],4],[[],4],[[],4],[26,[[8,[27,28]]]],[26,[[8,[27,28]]]],[[24,5],6],[[23,5],6],[[23,5],6],[[]],[[]],[29,23],[[]],[[[30,[12]]],23],[[]],[[]],[[]],0,0,[[24,24],4],[[23,23],4],0,[24,8],[23,8],[[23,31],[[8,[32,12]]]],0,0,0,[[]],[[]],[[],12],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],17],[[],17],[[],17],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[21,5],6],[[]],[[33,[30,[34]],[11,[10]],35,36,[37,[[30,[34]]]]],9],[[[37,[[30,[38]]]],33,12],9],[[33,12,[30,[12]]],9],[[]],[[[39,[21]],23],9],[[],8],[[],8],[[],17],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[40,40],[[]],[[40,41],9],[[42,41],9],[41,9],[[41,43],9],[[44,43],9],[41,9],[41,9],[[41,38],9],[[45,38],9],[41,9],[[],40],[[40,41],9],[[42,41],9],[[42,41],9],[[],[[8,[40]]]],[[],[[8,[42]]]],0,[26,[[8,[27,28]]]],[26,[[8,[27,28]]]],[[[47,[46]],48],9],[[[47,[46]],48],9],[[40,5],6],[[42,5],6],[[]],[[]],[23,9],[[33,12,35,36],9],[[41,12],9],[[44,48],9],[[44,16],9],0,0,[[]],[[]],[[[47,[46]],38],9],[[44,38],9],0,[40,8],[42,8],[41,9],[[]],[[],8],[[],8],[[],8],[[],8],[[],17],[[],17],[[41,38],9],[[44,38],9],0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],49],[[]],[[],49],[[]],[[],49],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,50],[51,51],[52,52],[53,53],[35,35],[36,36],[54,54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[36]]]],[[50,50],4],[[55,55],4],[[52,52],4],[[53,53],4],[[35,35],4],[[36,36],4],[[54,54],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[26,[[8,[27,28]]]],[[50,5],6],[[51,5],6],[[55,5],6],[[52,5],6],[[53,5],6],[[35,5],6],[[35,5],6],[[36,5],6],[[36,5],6],[[54,5],6],[[]],[[]],[[]],[[]],[10,52],[[]],[16,35],[12,35],[[]],[56,35],[57,35],[[]],[16,36],[56,36],[[]],[4,54],[10,[[30,[52]]]],[10,[[30,[53]]]],[10,[[30,[54]]]],[16,[[30,[52]]]],[16,[[30,[53]]]],[16,[[30,[54]]]],[16,[[30,[52]]]],[16,[[30,[53]]]],[16,[[30,[54]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,8],[35,4],[52,16],[52,[[49,[16]]]],[53,16],[53,[[49,[16]]]],[54,16],[54,[[49,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52,10],[53,10],[54,10],[[],12],[[],12],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[[11,[10]],58],9],[[58,5],6],[[]],[[]],[[],12],[[],8],[[],8],[[],17],[[]],0,0,0,[59,9],[59,9],0,[[]],[[]],[59,9],[59,59],[[]],[[59,5],6],[[]],0,[[]],0,[[]],[[],8],[[],8],[[],17],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[60,[30,[56]],[30,[11]]],[[11,[10]]]],[61,[[11,[10]]]],[[57,11],[[11,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,4],[60,60],[62,62],[61,61],[57,57],[[]],[[]],[[]],[[]],0,0,0,[[],63],[64,65],[66,65],[67,65],[[],[[8,[60]]]],[[60,60],4],[[62,62],4],[[61,61],4],[[57,35],4],[[57,57],4],[[57,36],4],[[63,63],4],[[],4],[[],4],[[],4],[[],4],[26,[[8,[27,28]]]],[26,[[8,[27,28]]]],[26,[[8,[27,28]]]],[[60,5],6],[[62,5],6],[[62,5],6],[[61,5],6],[[57,5],6],[[63,5],6],[[62,5],[[8,[7]]]],[[]],[[]],[12,60],[16,60],[[]],[[]],[16,61],[[]],[[]],[[]],[[]],[57],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[60,60],4],[[62,62],4],[[61,61],4],[[57,57],4],[[63,63],4],[62,13],[[],14],[62,[[15,[62]]]],[[],16],0,0,[60,8],[61,8],[57,8],0,0,[[]],[[]],[[]],[[]],[[],12],[[],8],[[],8],[[],8],[11,[[8,[60,68]]]],[[],8],[[],8],[[],8],[69,[[8,[57,12]]]],[43,[[8,[57,12]]]],[[],8],[[],8],[16,[[8,[63,12]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],[[8,[62,18]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[70,8],[71,8],0,0,[[]],[[]],[[59,72,23],9],[73,74],[[]],[[1,14,[22,[21]]],9],[[]],[[[22,[21]],14,4],9],[[72,23,[22,[21]],[75,[51]],[76,[51]]],9],[[],8],[[],8],[[],17],[[72,23,[22,[21]],[75,[51]],[76,[51]]],9],[[]],0,[[],31],[[[22,[21]],31],9],[[10,10,77,4],70],[[[22,[21]],12,12],9],[11,14],[[[11,[10]]]],[[[22,[21]],12,[30,[12]]],9],[77,10],[[[11,[10]],[30,[56]],[30,[11]]],[[11,[10]]]],[[56,53],[[8,[59,12]]]],[56,[[8,[59,12]]]],[[],[[11,[10]]]],[10,[[30,[14]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[38,38],[43,43],[34,34],[[]],[[]],[[]],[[],38],[[],48],[[],36],[[],12],[[],[[8,[38]]]],[[],[[8,[43]]]],[[],[[78,[34]]]],[[38,38],4],[[43,43],4],[[34,34],4],[[],4],[[],4],[[],4],[26,[[8,[27,28]]]],[26,[[8,[27,28]]]],0,[[38,5],6],[[43,5],6],[[43,5],6],[[34,5],6],[[34,5],6],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[79,[[8,[38,12]]]],[16,[[8,[[11,[38]],12]]]],[23,[[8,[[78,[34]],12]]]],[[38,38],4],0,0,0,0,[[38,38],4],[[43,43],4],[[34,34],4],0,0,0,0,0,[[],12],0,0,[38,8],[43,8],[[]],[[]],[[]],[[],12],[[],12],[[],8],[69,[[8,[43,12]]]],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[],17],[[],17],[[],17],0,[[]],[[]],[[]],0],"p":[[3,"Header"],[3,"ResourceRecord"],[3,"Question"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[8,"Future"],[15,"u8"],[3,"Vec"],[3,"String"],[6,"PackingResult"],[15,"usize"],[3,"PackedStructDisplay"],[15,"str"],[3,"TypeId"],[4,"PackingError"],[3,"State"],[3,"Request"],[4,"Command"],[3,"Sender"],[3,"ConfigFile"],[3,"IPAllowList"],[3,"CONFIG_LOCATIONS"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Config"],[4,"Option"],[3,"ArgMatches"],[3,"LoggerHandle"],[3,"Pool"],[3,"ZoneRecord"],[4,"RecordType"],[4,"RecordClass"],[3,"Sender"],[3,"FileZone"],[3,"Receiver"],[3,"User"],[6,"SqlitePool"],[3,"ZoneOwnership"],[3,"FileZoneRecord"],[3,"Transaction"],[3,"SqliteConnection"],[3,"Sqlite"],[3,"PoolConnection"],[15,"u64"],[4,"Cow"],[4,"Agent"],[4,"AgentState"],[4,"OpCode"],[4,"Rcode"],[4,"PacketType"],[4,"SystemState"],[15,"u16"],[4,"InternalResourceRecord"],[4,"DumpType"],[3,"Reply"],[3,"DomainName"],[3,"DNSCharString"],[3,"LocRecord"],[3,"FileLocRecord"],[3,"CAA_TAG_VALIDATOR"],[3,"Regex"],[3,"URI_RECORD"],[3,"LOC_REGEX"],[3,"FromUtf8Error"],[3,"SqliteRow"],[15,"u32"],[15,"u128"],[4,"SocketAddr"],[3,"LOCALHOST"],[4,"IpAddr"],[3,"Sender"],[3,"Receiver"],[15,"f32"],[3,"PatriciaMap"],[3,"Path"],[13,"ImportFile"],[13,"GetRecord"],[13,"GetZone"],[13,"Started"],[13,"Stopped"],[13,"A"],[13,"AAAA"],[13,"LOC"],[13,"TXT"],[13,"CNAME"],[13,"HINFO"],[13,"NAPTR"],[13,"MX"],[13,"SOA"],[13,"CAA"],[13,"NS"],[13,"URI"],[13,"PTR"],[13,"AXFR"],[13,"MB"],[13,"MG"],[13,"MR"],[13,"NULL"],[13,"WKS"],[13,"MINFO"],[13,"MAILB"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
