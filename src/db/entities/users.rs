//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "users")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: u64,
    pub displayname: String,
    pub username: String,
    pub email: String,
    pub disabled: Vec<u8>,
    pub authref: Option<String>,
    pub admin: Option<Vec<u8>>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::ownership::Entity")]
    Ownership,
    #[sea_orm(has_many = "super::user_tokens::Entity")]
    UserTokens,
}

impl Related<super::ownership::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Ownership.def()
    }
}

impl Related<super::user_tokens::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserTokens.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
